{"version":3,"sources":["styles/fonts/BebasNeue-Regular.ttf","styles/fonts/NotoSansKR-Bold.otf","styles/fonts/NotoSansKR-Regular.otf","styles/fonts/NotoSansKR-Light.otf","components/Sidebar/styles.ts","components/Sidebar/index.tsx","api/index.ts","containers/Movies/MoviesContainer/styles.ts","components/MoviesSection/styles.ts","components/MoviesSection/index.tsx","components/Poster/styles.ts","components/Poster/index.tsx","hooks/index.ts","containers/Movies/MoviesContainer/index.tsx","containers/TV/TVContainer/styles.ts","containers/TV/TVContainer/index.tsx","containers/Search/index.tsx","containers/Detail/MovieDetail/styles.ts","containers/Detail/MovieDetail/index.tsx","containers/Detail/TVDetail/index.tsx","components/Router.tsx","styles/GlobalStyles.ts","redux/reducers/movies.ts","redux/actions/movies.ts","redux/reducers/index.ts","redux/store.ts","App.tsx","index.tsx"],"names":["module","exports","NavContainer","styled","nav","NavList","ul","NavListItemLink","Link","NavListItem","li","current","NavListItemIcon","FontAwesomeIcon","Sidebar","pathname","useLocation","to","icon","faVideo","faTv","faSearch","api","axios","create","baseURL","params","api_key","language","IMAGE_BASE_URL","moviesApi","get","movie_id","append_to_response","term","query","tvApi","tv_id","Container","div","section","h1","Section","Title","span","MoviesSection","children","title","MovieContainer","MovieImg","h2","img","Poster","movie","isMovie","id","src","poster_path","alt","name","usePromise","promiseCreator","deps","useState","loading","setLoading","resolved","setResolved","error","setError","useEffect","a","process","MoviesContainer","nowPlayingResponse","topRatedResponse","popularResponse","upcomingResponse","data","results","map","key","TVContainer","onTheAir","setOnTheAir","topRated","setTopRated","popular","setPopular","airingToday","setAiringToday","onTheAirResults","topRatedResults","popularResults","airingTodayResults","getTVs","SearchContainer","Input","input","Search","setTerm","moviesResults","setMoviesResults","tvResults","setTVResults","onChangeHandler","e","value","target","getResults","type","placeholder","onChange","length","BackgroundImage","path","MovieDetailContainer","DetailBackGroundImage","DetailInfoContainer","DetailHeader","DetailContents","MovieTitle","MovieOriginalTitle","DetailOverview","p","DetailInfo","DetailGenres","Genre","DetailVideos","Video","iframe","DetailContainer","useRouteMatch","movieDetail","backdrop_path","original_title","overview","genres","videos","video","idx","DetailSeasons","TVDetailContainer","tvDetail","setTVDetail","getTV","seasons","show","Router","exact","component","Movies","TV","MoviesDetail","TVDetail","from","GlobalStyles","createGlobalStyle","reset","BebasNeue","NotoSansKRBold","NotoSansKRRegular","NotoSansKRLight","initialState","nowPlaying","upcoming","detail","moviesReducer","prevState","action","reducer","combineReducers","movies","store","createStore","reducers","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85f0209a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BebasNeue-Regular.21bb70b6.ttf\";","module.exports = __webpack_public_path__ + \"static/media/NotoSansKR-Bold.c4723de3.otf\";","module.exports = __webpack_public_path__ + \"static/media/NotoSansKR-Regular.839a2f6c.otf\";","module.exports = __webpack_public_path__ + \"static/media/NotoSansKR-Light.1b0504a3.otf\";","import styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface IProps {\r\n  current: boolean;\r\n}\r\n\r\nexport const NavContainer = styled.nav`\r\n  font-family: \"Bebas Neue\";\r\n  background-color: #141414;\r\n  -webkit-box-shadow: 10px 0px 8px 0px rgba(0, 0, 0, 0.15);\r\n  -moz-box-shadow: 10px 0px 8px 0px rgba(0, 0, 0, 0.15);\r\n  box-shadow: 10px 0px 8px 0px rgba(0, 0, 0, 0.15);\r\n  height: 100%;\r\n  position: fixed;\r\n  width: 100px;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n  @media (max-width: 600px) {\r\n    position: inherit;\r\n    width: 100%;\r\n    height: 70px;\r\n  }\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (max-width: 600px) {\r\n    display: flex;\r\n    flex-direction: row;\r\n    height: inherit;\r\n  }\r\n`;\r\n\r\nexport const NavListItemLink = styled(Link)`\r\n  width: 100%;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const NavListItem = styled.li<IProps>`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: ${({ current }) => (current ? \"#2dbaba\" : \"inherit\")};\r\n`;\r\n\r\nexport const NavListItemIcon = styled(FontAwesomeIcon)`\r\n  margin-bottom: 5px;\r\n  font-size: 12px;\r\n`;\r\n","import React from \"react\";\r\nimport * as S from \"./styles\";\r\nimport { faVideo, faTv, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst Sidebar = () => {\r\n  const { pathname } = useLocation();\r\n  return (\r\n    <S.NavContainer>\r\n      <S.NavList>\r\n        <S.NavListItemLink to=\"/\">\r\n          <S.NavListItem current={pathname === \"/\"}>\r\n            <S.NavListItemIcon icon={faVideo} />\r\n            Movies\r\n          </S.NavListItem>\r\n        </S.NavListItemLink>\r\n        <S.NavListItemLink to=\"/tv\">\r\n          <S.NavListItem current={pathname === \"/tv\"}>\r\n            <S.NavListItemIcon icon={faTv} />\r\n            TV\r\n          </S.NavListItem>\r\n        </S.NavListItemLink>\r\n        <S.NavListItemLink to=\"/search\">\r\n          <S.NavListItem current={pathname === \"/search\"}>\r\n            <S.NavListItemIcon icon={faSearch} />\r\n            Search\r\n          </S.NavListItem>\r\n        </S.NavListItemLink>\r\n      </S.NavList>\r\n    </S.NavContainer>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"a691c6e7d12d49d20d6a0e88d9792f16\";\r\nconst LANGUAGE = \"ko\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: API_KEY,\r\n    language: LANGUAGE\r\n  }\r\n});\r\n\r\nexport const IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/\";\r\n\r\nexport const VIDEO_BASE_URL = \"https://www.youtube.com/embed/\";\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  topRated: () => api.get(\"movie/top_rated\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  detail: (movie_id: number) =>\r\n    api.get(`movie/${movie_id}`, {\r\n      params: { append_to_response: \"videos\" }\r\n    }),\r\n  search: (term: string) =>\r\n    api.get(\"search/movie\", {\r\n      params: { query: term }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n  onTheAir: () => api.get(\"/tv/on_the_air\"),\r\n  topRated: () => api.get(\"/tv/top_rated\"),\r\n  popular: () => api.get(\"/tv/popular\"),\r\n  airingToday: () => api.get(\"/tv/airing_today\"),\r\n  detail: (tv_id: number) =>\r\n    api.get(`tv/${tv_id}`, {\r\n      params: { append_to_response: \"seasons\" }\r\n    }),\r\n  search: (term: string) =>\r\n    api.get(\"search/tv\", {\r\n      params: { query: term }\r\n    })\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 20px;\r\n  margin-left: 130px;\r\n  right: 0;\r\n  @media (max-width: 600px) {\r\n    margin-left: 0;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const MoviesSection = styled.section`\r\n  margin-bottom: 60px;\r\n`;\r\n\r\nexport const MoviesSectionTitle = styled.h1`\r\n  font-size: 20px;\r\n  margin-bottom: 8vh;\r\n`;\r\n\r\nexport const MoviePreviewContainer = styled.div`\r\n  &:hover div {\r\n    transform: translateX(-20%);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.div`\r\n  margin-top: 3em;\r\n`;\r\n\r\nexport const Title = styled.span``;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  margin-top: 10px;\r\n  &:hover div {\r\n    transform: translateX(-10%);\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Section, Title, Container } from \"./styles\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n}\r\n\r\nconst MoviesSection: React.FC<IProps> = ({ children, title }) => {\r\n  return (\r\n    <Section>\r\n      <Title>{title}</Title>\r\n      <Container>{children}</Container>\r\n    </Section>\r\n  );\r\n};\r\nexport default MoviesSection;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MovieContainer = styled.div`\r\n  transition: transform 0.3s ease 0.1ms;\r\n  &:not(:last-child) {\r\n    margin-right: 0.2vw;\r\n  }\r\n\r\n  &:hover:first-child {\r\n    transform: translateX(10%) scale(1.15) !important;\r\n\r\n    ~ div {\r\n      transform: translateX(20%) !important;\r\n    }\r\n  }\r\n\r\n  &:hover ~ div {\r\n    transform: translateX(10%) !important;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(1.15) !important;\r\n  }\r\n`;\r\n\r\nexport const MovieTitle = styled.h2`\r\n  font-weight: 300;\r\n  font-size: 13px;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const MovieImg = styled.img`\r\n  height: 15vw;\r\n  min-height: 10vw;\r\n`;\r\n","import React from \"react\";\r\nimport { MovieContainer, MovieImg } from \"./styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ICommonMovie } from \"../../types/types\";\r\nimport { IMAGE_BASE_URL } from \"../../api\";\r\n\r\ninterface IProps {\r\n  key: number;\r\n  movie: ICommonMovie;\r\n  isMovie: boolean;\r\n}\r\n\r\nconst Poster: React.FC<IProps> = ({ movie, isMovie = false }) => {\r\n  return (\r\n    <MovieContainer>\r\n      <Link to={isMovie ? `/movie/${movie.id}` : `/tv/${movie.id}`}>\r\n        <MovieImg\r\n          src={`${IMAGE_BASE_URL}w300${movie.poster_path}`}\r\n          alt={isMovie ? `Image of ${movie.title}` : `Image of ${movie.name}`}\r\n          title={isMovie ? movie.title : movie.name}\r\n        />\r\n      </Link>\r\n    </MovieContainer>\r\n  );\r\n};\r\n\r\nexport default Poster;\r\n","import { useEffect, useState } from \"react\";\r\nimport { AxiosPromise, AxiosResponse } from \"axios\";\r\n\r\nconst usePromise = <S>(\r\n  promiseCreator: { (): AxiosPromise },\r\n  deps: []\r\n): [boolean, AxiosResponse<S> | null, boolean] => {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [resolved, setResolved] = useState<AxiosResponse<S> | null>(null);\r\n  const [error, setError] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const process = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const resolved = await promiseCreator();\r\n        setResolved(resolved);\r\n      } catch (e) {\r\n        setError(e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    process();\r\n  }, deps);\r\n\r\n  return [loading, resolved, error];\r\n};\r\n\r\nexport default usePromise;\r\n","import React from \"react\";\r\nimport { moviesApi } from \"../../../api\";\r\nimport { Container } from \"./styles\";\r\nimport MoviesSection from \"../../../components/MoviesSection\";\r\nimport Poster from \"../../../components/Poster\";\r\nimport usePromise from \"../../../hooks\";\r\nimport { ICommonMovie } from \"../../../types/types\";\r\n\r\ninterface IResults {\r\n  results: ICommonMovie[];\r\n}\r\n\r\nconst MoviesContainer = () => {\r\n  const [, nowPlayingResponse] = usePromise<IResults>(\r\n    () => moviesApi.nowPlaying(),\r\n    []\r\n  );\r\n  const [, topRatedResponse] = usePromise<IResults>(\r\n    () => moviesApi.topRated(),\r\n    []\r\n  );\r\n  const [, popularResponse] = usePromise<IResults>(\r\n    () => moviesApi.popular(),\r\n    []\r\n  );\r\n  const [, upcomingResponse] = usePromise<IResults>(\r\n    () => moviesApi.upcoming(),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <MoviesSection title=\"현재 상영작\">\r\n        {nowPlayingResponse\r\n          ? nowPlayingResponse.data.results.map(movie => (\r\n              <Poster key={movie.id} movie={movie} isMovie={true} />\r\n            ))\r\n          : \"현재 상영 중인 영화 목록을 불러오지 못했습니다.\"}\r\n      </MoviesSection>\r\n      <MoviesSection title=\"평점순\">\r\n        {topRatedResponse\r\n          ? topRatedResponse.data.results.map(movie => (\r\n              <Poster key={movie.id} movie={movie} isMovie={true} />\r\n            ))\r\n          : \"최고 평점 순서 영화 목록을 불러오지 못했습니다.\"}\r\n      </MoviesSection>\r\n      <MoviesSection title=\"인기순\">\r\n        {popularResponse\r\n          ? popularResponse.data.results.map(movie => (\r\n              <Poster key={movie.id} movie={movie} isMovie={true} />\r\n            ))\r\n          : \"인기있는 순서 영화 목록을 불러오지 못했습니다.\"}\r\n      </MoviesSection>\r\n      <MoviesSection title=\"개봉예정작\">\r\n        {upcomingResponse\r\n          ? upcomingResponse.data.results.map(movie => (\r\n              <Poster key={movie.id} movie={movie} isMovie={true} />\r\n            ))\r\n          : \"개봉 예정 영화 목록을 불러오지 못했습니다.\"}\r\n      </MoviesSection>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MoviesContainer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 20px;\r\n  margin-left: 130px;\r\n  right: 0;\r\n  @media (max-width: 600px) {\r\n    margin-left: 0;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const MoviesSection = styled.section`\r\n  margin-bottom: 60px;\r\n`;\r\n\r\nexport const MoviesSectionTitle = styled.h1`\r\n  font-size: 20px;\r\n  margin-bottom: 8vh;\r\n`;\r\n\r\nexport const MoviePreviewContainer = styled.div`\r\n  &:hover div {\r\n    transform: translateX(-20%);\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { tvApi } from \"../../../api\";\r\nimport { ICommonMovie } from \"../../../types/types\";\r\nimport MoviesSection from \"../../../components/MoviesSection\";\r\nimport Poster from \"../../../components/Poster\";\r\nimport { Container } from \"./styles\";\r\n\r\nconst TVContainer = () => {\r\n  const [onTheAir, setOnTheAir] = useState<ICommonMovie[]>([]);\r\n  const [topRated, setTopRated] = useState<ICommonMovie[]>([]);\r\n  const [popular, setPopular] = useState<ICommonMovie[]>([]);\r\n  const [airingToday, setAiringToday] = useState<ICommonMovie[]>([]);\r\n\r\n  useEffect(() => {\r\n    const getTVs = async () => {\r\n      const {\r\n        data: { results: onTheAirResults }\r\n      } = await tvApi.onTheAir();\r\n      setOnTheAir(onTheAirResults);\r\n\r\n      const {\r\n        data: { results: topRatedResults }\r\n      } = await tvApi.topRated();\r\n      setTopRated(topRatedResults);\r\n\r\n      const {\r\n        data: { results: popularResults }\r\n      } = await tvApi.popular();\r\n      setPopular(popularResults);\r\n\r\n      const {\r\n        data: { results: airingTodayResults }\r\n      } = await tvApi.airingToday();\r\n      setAiringToday(airingTodayResults);\r\n    };\r\n\r\n    getTVs();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <MoviesSection title=\"현재 방영작 \">\r\n        {onTheAir\r\n          ? onTheAir.map(movie => (\r\n              <Poster key={movie.id} movie={movie} isMovie={false} />\r\n            ))\r\n          : \"현재 방영 중인 TV프로그램 목록을 불러오지 못했습니다.\"}\r\n      </MoviesSection>\r\n      <MoviesSection title=\"평점순\">\r\n        {topRated\r\n          ? topRated.map(movie => (\r\n              <Poster key={movie.id} movie={movie} isMovie={false} />\r\n            ))\r\n          : \"최고 평점 순서 TV프로그램 목록을 불러오지 못했습니다.\"}\r\n      </MoviesSection>\r\n      <MoviesSection title=\"인기순\">\r\n        {popular\r\n          ? popular.map(movie => (\r\n              <Poster key={movie.id} movie={movie} isMovie={false} />\r\n            ))\r\n          : \"인기있는 순서 TV프로그램 목록을 불러오지 못했습니다.\"}\r\n      </MoviesSection>\r\n      <MoviesSection title=\"오늘 방송 예정작\">\r\n        {airingToday\r\n          ? airingToday.map(movie => (\r\n              <Poster key={movie.id} movie={movie} isMovie={false} />\r\n            ))\r\n          : \"오늘 방송 예정 TV프로그램 목록을 불러오지 못했습니다.\"}\r\n      </MoviesSection>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TVContainer;\r\n","import React, { ChangeEvent, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\nimport { ICommonMovie } from \"../../types/types\";\r\nimport MoviesSection from \"../../components/MoviesSection\";\r\nimport Poster from \"../../components/Poster\";\r\n\r\nconst SearchContainer = styled.div`\r\n  position: relative;\r\n  left: 120px;\r\n  top: 20px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border-style: none;\r\n  width: 100%;\r\n  background-color: inherit;\r\n  color: white;\r\n  height: 40px;\r\n  font-size: 20px;\r\n  padding: 10px;\r\n  ::placeholder {\r\n    font-size: 20px;\r\n    text-align: start;\r\n  }\r\n`;\r\n\r\nconst Search = () => {\r\n  const [term, setTerm] = useState(\"\");\r\n  const [moviesResults, setMoviesResults] = useState<ICommonMovie[]>([]);\r\n  const [tvResults, setTVResults] = useState<ICommonMovie[]>([]);\r\n\r\n  const onChangeHandler = async (e: ChangeEvent<HTMLInputElement>) => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n    setTerm(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getResults = async () => {\r\n      if (term) {\r\n        const {\r\n          data: { results: moviesResults }\r\n        } = await moviesApi.search(term);\r\n        setMoviesResults(moviesResults);\r\n\r\n        const {\r\n          data: { results: tvResults }\r\n        } = await tvApi.search(term);\r\n        setTVResults(tvResults);\r\n      }\r\n    };\r\n\r\n    getResults();\r\n  }, [term]);\r\n\r\n  return (\r\n    <SearchContainer>\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"검색어를 입력하세요.\"\r\n        onChange={onChangeHandler}\r\n      />\r\n      {moviesResults.length > 0 ? (\r\n        <MoviesSection title=\"영화 검색 결과\">\r\n          {moviesResults.map(movie => (\r\n            <Poster key={movie.id} movie={movie} isMovie={true} />\r\n          ))}\r\n        </MoviesSection>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {tvResults.length > 0 ? (\r\n        <MoviesSection title=\"TV 프로그램 검색 결과\">\r\n          {tvResults.map(movie => (\r\n            <Poster key={movie.id} movie={movie} isMovie={false} />\r\n          ))}\r\n        </MoviesSection>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </SearchContainer>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import styled from \"styled-components\";\r\nimport { IMAGE_BASE_URL } from \"../../../api\";\r\n\r\ninterface SCProps {\r\n  path: string;\r\n}\r\n\r\nexport const MovieContainer = styled.div`\r\n  width: calc(100vw - 100px);\r\n  height: 100%;\r\n  position: absolute;\r\n  left: 100px;\r\n  @media (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div<SCProps>`\r\n  position: absolute;\r\n  top: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: url(${({ path }) => `${IMAGE_BASE_URL}original${path}`}) no-repeat\r\n    center center fixed;\r\n  background-size: cover;\r\n  z-index: -1;\r\n  opacity: 0.4;\r\n`;\r\n\r\nexport const MovieDetailContainer = styled.div`\r\n  display: flex;\r\n  padding: 1.5em;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const DetailBackGroundImage = styled.img`\r\n  height: 70vh;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 10;\r\n  mask-image: -webkit-gradient(\r\n    linear,\r\n    100% 0%,\r\n    0% 0%,\r\n    to(rgb(0, 0, 0)),\r\n    color-stop(0.3, rgb(0, 0, 0)),\r\n    from(rgba(0, 0, 0, 0))\r\n  );\r\n`;\r\n\r\nexport const DetailInfoContainer = styled.div`\r\n  margin: 30px;\r\n  width: 60%;\r\n`;\r\n\r\nexport const DetailHeader = styled.div``;\r\n\r\nexport const DetailContents = styled.div`\r\n  font-size: 1.125vw;\r\n  font-weight: 300;\r\n`;\r\n\r\nexport const MovieTitle = styled.h1`\r\n  font-size: 40px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const MovieOriginalTitle = styled.h2`\r\n  margin-top: 10px;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const DetailOverview = styled.p`\r\n  font-size: 1.125vw;\r\n  font-weight: 300;\r\n  line-height: 1.6;\r\n  opacity: 0.7;\r\n  margin-top: 0.8em;\r\n`;\r\n\r\nexport const DetailInfo = styled.div``;\r\n\r\nexport const DetailGenres = styled.ul`\r\n  margin: 1rem 0;\r\n  display: flex;\r\n`;\r\n\r\nexport const Genre = styled.li`\r\n  margin-left: 5px;\r\n`;\r\n\r\nexport const DetailVideos = styled.div``;\r\n\r\nexport const Video = styled.iframe`\r\n  width: 100%;\r\n  height: 25vh;\r\n  max-width: 40%;\r\n  margin-top: 0.5em;\r\n  &:not(:last-child) {\r\n    margin-right: 0.5em;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useRouteMatch } from \"react-router\";\r\nimport { ICommonMovie } from \"../../../types/types\";\r\nimport { moviesApi, IMAGE_BASE_URL, VIDEO_BASE_URL } from \"../../../api\";\r\nimport * as S from \"./styles\";\r\nimport usePromise from \"../../../hooks\";\r\n\r\nconst DetailContainer = () => {\r\n  const {\r\n    params: { id }\r\n  } = useRouteMatch();\r\n  const [loading, movieDetail] = usePromise<ICommonMovie>(\r\n    () => moviesApi.detail(id),\r\n    []\r\n  );\r\n\r\n  if (loading) {\r\n    return <div>영화 정보를 불러오는 중입니다.</div>;\r\n  }\r\n\r\n  if (movieDetail) {\r\n    const { data } = movieDetail;\r\n    return (\r\n      <S.MovieContainer>\r\n        <S.BackgroundImage path={data.backdrop_path!} />\r\n        <S.MovieDetailContainer>\r\n          <S.DetailBackGroundImage\r\n            src={`${IMAGE_BASE_URL}original${data.poster_path}`}\r\n          />\r\n          <S.DetailInfoContainer>\r\n            <S.DetailHeader>\r\n              <S.MovieTitle>{data.title}</S.MovieTitle>\r\n              <S.MovieOriginalTitle>{data.original_title}</S.MovieOriginalTitle>\r\n            </S.DetailHeader>\r\n            <S.DetailContents>\r\n              <S.DetailOverview>{data.overview}</S.DetailOverview>\r\n              <S.DetailInfo>\r\n                <S.DetailGenres>\r\n                  장르:{\" \"}\r\n                  {data.genres!.map(({ id, name }) => (\r\n                    <S.Genre key={id}>{`${name}, `}</S.Genre>\r\n                  ))}\r\n                </S.DetailGenres>\r\n                <S.DetailVideos>\r\n                  {data.videos!.results.map((video, idx) => {\r\n                    // 동영상 두 개만 표시\r\n                    if (idx < 2) {\r\n                      return (\r\n                        <S.Video\r\n                          key={video.id}\r\n                          src={`${VIDEO_BASE_URL}${video.key}`}\r\n                        />\r\n                      );\r\n                    } else {\r\n                      return false;\r\n                    }\r\n                  })}\r\n                </S.DetailVideos>\r\n              </S.DetailInfo>\r\n            </S.DetailContents>\r\n          </S.DetailInfoContainer>\r\n        </S.MovieDetailContainer>\r\n      </S.MovieContainer>\r\n    );\r\n  }\r\n  return <div>영화 정보를 불러오지 못했습니다.</div>;\r\n};\r\n\r\nexport default DetailContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useRouteMatch } from \"react-router\";\r\nimport { ICommonMovie } from \"../../../types/types\";\r\nimport styled from \"styled-components\";\r\nimport { IMAGE_BASE_URL, tvApi } from \"../../../api\";\r\nimport Poster from \"../../../components/Poster\";\r\n\r\ninterface SCProps {\r\n  path: string;\r\n}\r\n\r\nconst MovieContainer = styled.div`\r\n  width: calc(100vw - 100px);\r\n  height: 100%;\r\n  position: absolute;\r\n  left: 100px;\r\n  @media (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst BackgroundImage = styled.div<SCProps>`\r\n  position: absolute;\r\n  top: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: url(${({ path }) => `${IMAGE_BASE_URL}original${path}`}) no-repeat\r\n    center center fixed;\r\n  background-size: cover;\r\n  z-index: -1;\r\n  opacity: 0.4;\r\n`;\r\n\r\nconst MovieDetailContainer = styled.div`\r\n  display: flex;\r\n  padding: 1.5em;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst DetailBackGroundImage = styled.img`\r\n  height: 70vh;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 10;\r\n  mask-image: -webkit-gradient(\r\n    linear,\r\n    100% 0%,\r\n    0% 0%,\r\n    to(rgb(0, 0, 0)),\r\n    color-stop(0.3, rgb(0, 0, 0)),\r\n    from(rgba(0, 0, 0, 0))\r\n  );\r\n`;\r\n\r\nconst DetailInfoContainer = styled.div`\r\n  margin: 30px;\r\n  width: 60%;\r\n`;\r\n\r\nconst DetailHeader = styled.div``;\r\n\r\nconst DetailContents = styled.div`\r\n  font-size: 1.125vw;\r\n  font-weight: 300;\r\n`;\r\n\r\nconst MovieTitle = styled.h1`\r\n  font-size: 40px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst MovieOriginalTitle = styled.h2`\r\n  margin-top: 10px;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst DetailOverview = styled.p`\r\n  font-size: 1.125vw;\r\n  font-weight: 300;\r\n  line-height: 1.6;\r\n  opacity: 0.7;\r\n  margin-top: 0.8em;\r\n`;\r\n\r\nconst DetailInfo = styled.div`\r\n  margin-top: 1em;\r\n`;\r\n\r\nconst DetailGenres = styled.ul`\r\n  display: flex;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Genre = styled.li`\r\n  margin-left: 5px;\r\n`;\r\n\r\nconst DetailSeasons = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  overflow-y: auto;\r\n  width: 100%;\r\n  height: 15vw;\r\n  min-width: 10vw;\r\n`;\r\n\r\nconst TVDetailContainer = () => {\r\n  const [tvDetail, setTVDetail] = useState<ICommonMovie | null>(null);\r\n  const {\r\n    params: { id }\r\n  } = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    const getTV = async () => {\r\n      const { data } = await tvApi.detail(id);\r\n      setTVDetail(data);\r\n    };\r\n    getTV();\r\n  }, [id]);\r\n  if (tvDetail) {\r\n    return (\r\n      <MovieContainer>\r\n        <BackgroundImage path={tvDetail.backdrop_path!} />\r\n        <MovieDetailContainer>\r\n          <DetailBackGroundImage\r\n            src={`${IMAGE_BASE_URL}original${tvDetail.poster_path}`}\r\n          />\r\n          <DetailInfoContainer>\r\n            <DetailHeader>\r\n              <MovieTitle>{tvDetail.name}</MovieTitle>\r\n              <MovieOriginalTitle>{tvDetail.name}</MovieOriginalTitle>\r\n            </DetailHeader>\r\n            <DetailContents>\r\n              <DetailOverview>{tvDetail.overview}</DetailOverview>\r\n              <DetailInfo>\r\n                <DetailGenres>\r\n                  장르:{\" \"}\r\n                  {tvDetail.genres!.map(({ id, name }) => (\r\n                    <Genre key={id}>{name}</Genre>\r\n                  ))}\r\n                </DetailGenres>\r\n                <DetailSeasons>\r\n                  {tvDetail.seasons!.map(show => (\r\n                    <Poster key={show.id} movie={show} isMovie={false} />\r\n                  ))}\r\n                </DetailSeasons>\r\n              </DetailInfo>\r\n            </DetailContents>\r\n          </DetailInfoContainer>\r\n        </MovieDetailContainer>\r\n      </MovieContainer>\r\n    );\r\n  }\r\n  return <div></div>;\r\n};\r\n\r\nexport default TVDetailContainer;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Movies from \"../containers/Movies/MoviesContainer\";\r\nimport TV from \"../containers/TV/TVContainer\";\r\nimport Search from \"../containers/Search\";\r\nimport MoviesDetail from \"../containers/Detail/MovieDetail\";\r\nimport TVDetail from \"../containers/Detail/TVDetail\";\r\n\r\nconst Router = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Sidebar />\r\n      <Route path=\"/\" exact component={Movies} />\r\n      <Route path=\"/tv\" exact component={TV} />\r\n      <Route path=\"/search\" exact component={Search} />\r\n      <Route path=\"/movie/:id\" exact component={MoviesDetail} />\r\n      <Route path=\"/tv/:id\" exact component={TVDetail} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\nimport BebasNeue from \"./fonts/BebasNeue-Regular.ttf\";\r\nimport NotoSansKRBold from \"./fonts/NotoSansKR-Bold.otf\";\r\nimport NotoSansKRRegular from \"./fonts/NotoSansKR-Regular.otf\";\r\nimport NotoSansKRLight from \"./fonts/NotoSansKR-Light.otf\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset}\r\n    @font-face {\r\n       font-family: \"Bebas Neue\";\r\n       src: url(${BebasNeue}) format('truetype')\r\n    }\r\n    @font-face {\r\n        font-family: \"NotoSans\";\r\n        src: url(${NotoSansKRBold});\r\n        font-weight: 700;\r\n    }\r\n    @font-face {\r\n        font-family: \"NotoSans\";\r\n        src: url(${NotoSansKRRegular});\r\n        font-weight: medium;\r\n    }\r\n    @font-face {\r\n        font-family: \"NotoSans\";\r\n        src: url(${NotoSansKRLight});\r\n        font-weight: 300;\r\n    }\r\n    * {\r\n        box-sizing: border-box\r\n    }\r\n    body {\r\n        color: white;\r\n        background-color: #141414;\r\n        font-family: \"NotoSans\";\r\n        /* margin-left: 8%; */\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    \r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import {\r\n  GetMoviesNowPlayingAction,\r\n  GET_MOVIES_NOW_PLAYING,\r\n  GetMoviesTopRatedAction,\r\n  GetMoviesPopularAction,\r\n  GetMoviesUpcomingAction,\r\n  GetMoviesDetailAction,\r\n  GET_MOVIES_TOP_RATED,\r\n  GET_MOVIES_POPULAR,\r\n  GET_MOVIES_UPCOMING,\r\n  GET_MOVIES_DETAIL\r\n} from \"../actions/movies\";\r\n\r\ntype ActionTypes =\r\n  | GetMoviesNowPlayingAction\r\n  | GetMoviesTopRatedAction\r\n  | GetMoviesPopularAction\r\n  | GetMoviesUpcomingAction\r\n  | GetMoviesDetailAction;\r\n\r\nconst initialState = {\r\n  nowPlaying: null,\r\n  topRated: null,\r\n  popular: null,\r\n  upcoming: null,\r\n  detail: null\r\n};\r\n\r\nconst moviesReducer = (prevState = initialState, action: ActionTypes) => {\r\n  switch (action.type) {\r\n    case GET_MOVIES_NOW_PLAYING: {\r\n      return {\r\n        ...prevState,\r\n        nowPlaying: action.data\r\n      };\r\n    }\r\n    case GET_MOVIES_TOP_RATED: {\r\n      return {\r\n        ...prevState,\r\n        topRated: action.data\r\n      };\r\n    }\r\n    case GET_MOVIES_POPULAR: {\r\n      return {\r\n        ...prevState,\r\n        popular: action.data\r\n      };\r\n    }\r\n    case GET_MOVIES_UPCOMING: {\r\n      return {\r\n        ...prevState,\r\n        upcoming: action.data\r\n      };\r\n    }\r\n    case GET_MOVIES_DETAIL: {\r\n      return {\r\n        ...prevState,\r\n        detail: action.data\r\n      };\r\n    }\r\n    default:\r\n      return {\r\n        ...prevState\r\n      };\r\n  }\r\n};\r\n\r\nexport default moviesReducer;\r\n","import { ICommonMovie } from \"../../types/types\";\r\n\r\n// 액션 타입\r\nexport const GET_MOVIES_NOW_PLAYING = \"GET_MOVIES_NOW_PLAYING\";\r\nexport const GET_MOVIES_TOP_RATED = \"GET_MOVIES_TOP_RATED\";\r\nexport const GET_MOVIES_POPULAR = \"GET_MOVIES_POPULAR\";\r\nexport const GET_MOVIES_UPCOMING = \"GET_MOVIES_UPCOMING\";\r\nexport const GET_MOVIES_DETAIL = \"GET_MOVIES_DETAIL\";\r\n\r\n// 액션 인터페이스\r\nexport interface GetMoviesNowPlayingAction {\r\n  type: typeof GET_MOVIES_NOW_PLAYING;\r\n  data: ICommonMovie[];\r\n}\r\n\r\nexport interface GetMoviesTopRatedAction {\r\n  type: typeof GET_MOVIES_TOP_RATED;\r\n  data: ICommonMovie[];\r\n}\r\n\r\nexport interface GetMoviesPopularAction {\r\n  type: typeof GET_MOVIES_POPULAR;\r\n  data: ICommonMovie[];\r\n}\r\n\r\nexport interface GetMoviesUpcomingAction {\r\n  type: typeof GET_MOVIES_UPCOMING;\r\n  data: ICommonMovie[];\r\n}\r\n\r\nexport interface GetMoviesDetailAction {\r\n  type: typeof GET_MOVIES_DETAIL;\r\n  data: ICommonMovie[];\r\n}\r\n\r\nexport const getMoviesNowPlaying = (\r\n  data: ICommonMovie[]\r\n): GetMoviesNowPlayingAction => {\r\n  return {\r\n    type: GET_MOVIES_NOW_PLAYING,\r\n    data\r\n  };\r\n};\r\n\r\n// 액션\r\nexport const getMoviesTopRated = (\r\n  data: ICommonMovie[]\r\n): GetMoviesTopRatedAction => {\r\n  return {\r\n    type: GET_MOVIES_TOP_RATED,\r\n    data\r\n  };\r\n};\r\n\r\nexport const getMoviesPopular = (\r\n  data: ICommonMovie[]\r\n): GetMoviesPopularAction => {\r\n  return {\r\n    type: GET_MOVIES_POPULAR,\r\n    data\r\n  };\r\n};\r\n\r\nexport const getMoviesUpcoming = (\r\n  data: ICommonMovie[]\r\n): GetMoviesUpcomingAction => {\r\n  return {\r\n    type: GET_MOVIES_UPCOMING,\r\n    data\r\n  };\r\n};\r\n\r\nexport const getMoviesDetail = (\r\n  data: ICommonMovie[]\r\n): GetMoviesDetailAction => {\r\n  return {\r\n    type: GET_MOVIES_DETAIL,\r\n    data\r\n  };\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport moviesReducer from \"./movies\";\r\n\r\nconst reducer = combineReducers({\r\n  movies: moviesReducer\r\n});\r\n\r\nexport default reducer;\r\n\r\nexport type RootState = ReturnType<typeof reducer>;\r\n","import { createStore } from \"redux\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport Router from \"./components/Router\";\r\nimport GlobalStyles from \"./styles/GlobalStyles\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router />\r\n      <GlobalStyles />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}